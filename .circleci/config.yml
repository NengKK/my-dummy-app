version: 2
defaults: &defaults
  docker:
    - image: circleci/node:10.16.0-browsers
eb_node_workspace: &eb_node_workspace
  docker:
    - image: circleci/python:2.7
restore_checkout: &restore_checkout
  restore_cache:
    keys:
      - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
restore_dependencies: &restore_dependencies
  restore_cache:
    name: Restore NPM dependency
    key: v1-dependencies-{{ checksum "package-lock.json" }}
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .
  test_sed:
    <<: *defaults
    steps:
      - <<: *restore_checkout
      - run:
          name: List file and directory
          command: ls -la
      - run:
          name: view before package.json
          command: cat package.json
      - run:
          name: Check sed
          command: sed --help
      - run:
          name: Edit package.json
          command: sed -i 's/dummy-package.git/dummy-package.git#fail/g' package.json
      - run:
          name: view after package.json
          command: cat package.json
  install_dependencies:
    <<: *defaults
    steps:
      - <<: *restore_checkout
      - <<: *restore_dependencies
      - run:
          name: List file and directory
          command: ls -la
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Install npm package
          command: npm install
      - save_cache:
          name: Save NPM dependency cache
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - built
  deploy:
    <<: *eb_node_workspace
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test current directory
          command: |
            sudo pwd
            sudo ls -la
      - run:
          name: Install awscli
          command: |
            sudo pip install awsebcli --upgrade
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: Set environment variables
          command: |
            eb use MyDummyApp-env-latest --profile eb-cli
            eb setenv CIRCLE_BRANCH=${CIRCLE_BRANCH} CIRCLE_CI_TOKEN=${CIRCLE_CI_TOKEN} GITHUB_USER=${GITHUB_USER} PROJECT_NAME=${PROJECT_NAME}
      #- run:
      #    name: Set environment variables
      #    command: |
      #      eb use MyDummyApp-env-latest --profile eb-cli
      #      eb setenv CIRCLE_CI_TOKEN=${CIRCLE_CI_TOKEN} GITHUB_USER=${GITHUB_USER} PROJECT_NAME=${PROJECT_NAME}
      - run:
          name: Deploy to EB (latest)
          command: |
            eb use MyDummyApp-env-latest --profile eb-cli
            eb deploy -v --staged --profile eb-cli
workflows:
  version: 2
  build-deploy:
    jobs:
      - checkout_code
      - test_sed:
          requires:
            - checkout_code
      - install_dependencies:
          requires:
            - test_sed
      - build:
          requires:
            - install_dependencies
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master